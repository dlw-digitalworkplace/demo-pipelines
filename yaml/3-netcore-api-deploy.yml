pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: Release
  buildArtifactName: .NET Core web api - minimal steps
  netCoreApiName: dlwr-pipelines-dev-api-core

stages:
  - stage: build_web_api
    displayName: Prepare deployment web api
    jobs:
      - job: publish_web_api
        displayName: Publish web api
        steps:
        - task: DotNetCoreCLI@2
          displayName: ZIP web api package
          inputs:
            command: publish
            projects: server/NetCore/**/*.csproj
            publishWebProjects: True
            arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
            zipAfterPublish: True

        # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
        - task: PublishPipelineArtifact@1
          displayName: Create build artifact
          inputs:
            targetPath: $(Build.ArtifactStagingDirectory)
            artifactName: $(buildArtifactName)
  - stage: deploy_web_api_dev
    displayName: Deploy web api to DEV
    condition: succeeded()
    dependsOn: build_web_api
    jobs:
      - deployment: deploy_web_api
        displayName: Deploy web api
        pool:
          vmImage: windows-latest
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: Deploy Web Api (.NET Core)
                  inputs:
                    ConnectionType: AzureRM
                    azureSubscription: svc_connection_DEV
                    appType: webApp
                    WebAppName: $(netCoreApiName)
                    Package: $(Pipeline.Workspace)/$(buildArtifactName)/Pipelines.WebApi.zip